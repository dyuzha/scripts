# Название workflow (отображается в интерфейсе GitHub Actions)
name: ACME SSL Certificate Management

# Условия запуска workflow
on:
  # Срабатывает при операции push
  push:
    branches: [main]  # Только для ветки main
    # paths: ['bash/acme-set.sh'] # Только если изменены файлы в папке src/


# Блок задач (может содержать несколько независимых задач)
jobs:

  # Задача с именем certifica-test
  certifica-test:
    name: Test SSL Certificate Generation
    runs-on: ubuntu-latest  # OS для запуска

    env:
      CF_Token: ${{ secrets.CF_Token }}
      CF_Account_ID: ${{ secrets.CF_ACCOUNT_ID }}
      ACME_HOME: ./opt/acme
      DOMAIN: test1.dyuzha.ru
      DRY_RUN: true  # Всегда true для CI!

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Используем стандартное действие checkout версии 4
        # Пояснение:
        # - Создает полную копию репозитория в рабочей директории runner
        # - Автоматически настраивает Git-контекст
        # - Аналог команды: git clone --depth=1 https://github.com/ваш-репозиторий

      - run: echo "Hello, GitHub Actions!"
        # Пояснение:
        # - Выполняет команду в shell (по умолчанию bash)
        # - Вывод будет виден в логах выполнения workflow
        # - Можно использовать многострочные команды через |
        #
      - name: Setup environment
        run: |  # Многострочная команда
          mkdir -p "$ACME_HOME"
          echo "ACME_HOME set to: $ACME_HOME"

      - name: Verify script syntax # Человекочитаемое название шага
        run: |
          shellcheck ./bash/acme-set.sh || echo "ShellCheck found issues"
          bash -n ./bash/acme-set.sh || exit 1
        # Пояснение:

      - name: Execute acme-set.sh (Staging)
        run: |
          chmod +x ./bash/acme-set.sh
          ./bash/acme-set.sh > output.log 2>&1

          if grep - q "Error" output.log; then
            echo "::error::Script failed, check output.log"
            exit 1
          fi
          echo "::notice::ACME script executed successfully"
        # Пояснение:


      - name: Archive certificates
        if: success()
        run: |
          tar czvf certs.tar.gz $(find "$ACME_HOME" -name "${DOMAIN}*" -type d)
          echo "Certificates archived"
        # Пояснение:


      - name: Upload artifacts
        uses: actions/upload-artifact@v4  # Используем действие для загрузки артефактов
        with:  # Параметры действия
          name: script-output  # Имя артефакта
          path: output.log  # Путь к файлу для сохранения
        # Пояснение:
        # - Сохраняет файл output.log как артефакт выполнения
        # - Артефакт можно скачать через интерфейс GitHub Actions
        # - Хранится 90 дней (для бесплатных аккаунтов)

